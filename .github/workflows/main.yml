---
name: Build MSVC project

on: [ push, pull_request ]

jobs:
  build:
    name: Visual Studio 2019
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64

      - name: Build MSVC project
        shell: sh
        run: |
          MSBuild.exe ./LogReader.sln /property:Configuration=Release

      - name: Copy Executable
        shell: sh
        run: |
          mkdir -p -- "$RUNNER_TEMP/instdir"
          cp -- ./Release-x64/LogReader.exe "$RUNNER_TEMP/instdir"

      - name: Pack
        working-directory: ${{ runner.temp }}/instdir
        shell: sh
        run: cmake -E tar cfv "$RUNNER_TEMP/msvc.7z" --format=7zip -- .

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ${{ runner.temp }}/msvc.7z
          name: logreader-msvc.7z

  release:
    name: Create Release for ${{ github.ref }}
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Store Release url
        shell: sh
        run: |
          echo "${{ steps.create_release.outputs.upload_url }}" > ./upload_url

      - uses: actions/upload-artifact@v2
        with:
          path: ./upload_url
          name: upload_url

  publish:
    if: contains(github.ref, 'tags/v')
    name: Publish Release Artifacts from Visual Studio 2019
    runs-on: ubuntu-latest
    needs: release
    permissions:
      contents: write

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: logreader-msvc.7z
          path: ./

      - name: Download URL
        uses: actions/download-artifact@v2
        with:
          name: upload_url
          path: ./

      - id: set_upload_url
        shell: sh
        run: |
          upload_url=`cat ./upload_url`
          echo ::set-output name=upload_url::$upload_url

      - name: Upload to Release
        id: upload_to_release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.set_upload_url.outputs.upload_url }}
          asset_path: ./logreader-msvc.7z
          asset_name: logreader-msvc.7z
          asset_content_type: application/x-7z-compressed
