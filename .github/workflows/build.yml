---
name: Build MSVC project

on: [ push, pull_request ] # yamllint disable-line rule:truthy

jobs:
  build:
    name: Visual Studio 2019
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        config:
          - config: Release
            platform: x64
            output_dir: Release-x64
          - config: Release
            platform: x86
            output_dir: Release-Win32
          - config: Debug
            platform: x64
            output_dir: Debug-x64
          - config: Debug
            platform: x86
            output_dir: Debug-Win32
    steps:
      - uses: actions/checkout@v2

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: ${{ matrix.config.platform }}

      - name: Build MSVC project - ${{ matrix.config.config }} - ${{ matrix.config.platform }}
        env:
          CONFIG: ${{ matrix.config.config }}
          PLATFORM: ${{ matrix.config.platform }}
        shell: sh
        run: |
          MSBuild.exe ./LogReader.sln "/property:Configuration=$CONFIG" "/property:Platform=$PLATFORM"

      - name: Run Unit Tests - ${{ matrix.config.config }} - ${{ matrix.config.platform }}
        shell: sh
        run: |
          ./${{ matrix.config.output_dir }}/tests.exe

      - name: Copy Executable
        shell: sh
        run: |
          mkdir -p -- "$RUNNER_TEMP/instdir"
          cp -- ./${{ matrix.config.output_dir }}/LogReader.exe "$RUNNER_TEMP/instdir"

      - name: Pack
        env:
          ARCHIVE_FILE: ${{ runner.temp }}/logreader-${{ matrix.config.config }}-${{ matrix.config.platform }}.7z
        working-directory: ${{ runner.temp }}/instdir
        shell: sh
        run: cmake -E tar vcf "$ARCHIVE_FILE" --format=7zip -- .

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ${{ runner.temp }}/logreader-${{ matrix.config.config }}-${{ matrix.config.platform }}.7z
          name: logreader-${{ matrix.config.config }}-${{ matrix.config.platform }}.7z

  release:
    name: Create Release for ${{ github.ref }}
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Store Release url
        shell: sh
        run: |
          echo "${{ steps.create_release.outputs.upload_url }}" > ./upload_url

      - uses: actions/upload-artifact@v2
        with:
          path: ./upload_url
          name: upload_url

  publish:
    if: contains(github.ref, 'tags/v')
    name: Publish Release Artifacts from Visual Studio 2019
    runs-on: ubuntu-latest
    needs: release
    permissions:
      contents: write

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: logreader-Release-x64.7z
          path: ./

      - name: Download URL
        uses: actions/download-artifact@v2
        with:
          name: upload_url
          path: ./

      - id: set_upload_url
        shell: sh
        run: |
          upload_url=`cat ./upload_url`
          echo ::set-output name=upload_url::$upload_url

      - name: Upload to Release
        id: upload_to_release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.set_upload_url.outputs.upload_url }}
          asset_path: ./logreader-Release-x64.7z
          asset_name: logreader-Release-x64.7z
          asset_content_type: application/x-7z-compressed
